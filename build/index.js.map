{"version":3,"sources":["../src/index.js"],"names":["Impulsor","adspaceId","token","api","offset","limit","axios","get","buffer","data","url","shortener","decodeURIComponent"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;IAEqBA,Q;AACjB,oBAAYC,SAAZ,EAAuBC,KAAvB,EAA6B;AAAA;;AACzB,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,GAAL,GAAW,gCAAX;AACH;;;;;;;;;;;;;;AAEeC,gBAAAA,M,2DAAS,C;AAAGC,gBAAAA,K,2DAAQ,G;;uBACbC,kBAAMC,GAAN,WAAa,KAAKJ,GAAlB,6BAAwC,KAAKD,KAA7C,oBAA4DG,KAA5D,mBAA0ED,MAA1E,E;;;AAAfI,gBAAAA,M;iDACGA,MAAM,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGJL,gBAAAA,M,8DAAS,C;AAAGC,gBAAAA,K,8DAAQ,G;;uBACXC,kBAAMC,GAAN,WAAa,KAAKJ,GAAlB,2BAAsC,KAAKD,KAA3C,oBAA0DG,KAA1D,mBAAwED,MAAxE,E;;;AAAfI,gBAAAA,M;kDACGA,MAAM,CAACC,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGJL,gBAAAA,M,8DAAS,C;AAAGC,gBAAAA,K,8DAAQ,G;;uBACXC,kBAAMC,GAAN,WAAa,KAAKJ,GAAlB,2BAAsC,KAAKD,KAA3C,oBAA0DG,KAA1D,mBAAwED,MAAxE,E;;;AAAfI,gBAAAA,M;kDACGA,MAAM,CAACC,I;;;;;;;;;;;;;;;;;;;gGAGHC,G;;;;;;;;AAAKC,gBAAAA,S,8DAAY,I;;sBAGzB,OAAOA,SAAP,IAAoB,Q;;;;;;uBACJL,kBAAMC,GAAN,WAAa,KAAKJ,GAAlB,4BAAuC,KAAKD,KAA5C,sBAA6D,KAAKD,SAAlE,kBAAmFW,kBAAkB,CAACF,GAAD,CAArG,wBAAwHE,kBAAkB,CAACD,SAAD,CAA1I,E;;;AAAfH,gBAAAA,M;;;;;;uBAEeF,kBAAMC,GAAN,WAAa,KAAKJ,GAAlB,4BAAuC,KAAKD,KAA5C,sBAA6D,KAAKD,SAAlE,kBAAmFW,kBAAkB,CAACF,GAAD,CAArG,E;;;AAAfF,gBAAAA,M;;;kDAEGA,MAAM,CAACC,I","sourcesContent":["import \"@babel/polyfill/noConflict\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class Impulsor {\r\n    constructor(adspaceId, token){\r\n        this.adspaceId = adspaceId;\r\n        this.token = token;\r\n        this.api = \"http://api.impulsor.me/public/\";\r\n    }\r\n\r\n    async campaigns(offset = 0, limit = 100){\r\n        let buffer = await axios.get(`${this.api}campaigns?token=${this.token}&limit=${limit}&skip=${offset}`);\r\n        return buffer.data;\r\n    }\r\n\r\n    async coupons(offset = 0, limit = 100){\r\n        let buffer = await axios.get(`${this.api}coupons?token=${this.token}&limit=${limit}&skip=${offset}`);\r\n        return buffer.data;\r\n    }\r\n\r\n    async banners(offset = 0, limit = 100){\r\n        let buffer = await axios.get(`${this.api}banners?token=${this.token}&limit=${limit}&skip=${offset}`);\r\n        return buffer.data;\r\n    }\r\n\r\n    async deeplink(url, shortener = null){\r\n        let buffer;\r\n\r\n        if(typeof shortener == \"string\")\r\n            buffer = await axios.get(`${this.api}deeplink?token=${this.token}&adspace=${this.adspaceId}&url=${decodeURIComponent(url)}&shortener=${decodeURIComponent(shortener)}`);\r\n        else\r\n            buffer = await axios.get(`${this.api}deeplink?token=${this.token}&adspace=${this.adspaceId}&url=${decodeURIComponent(url)}`);\r\n\r\n        return buffer.data;\r\n    }\r\n}"],"file":"index.js"}